import cv2
import numpy as np
import os
from tqdm import tqdm

# üé® Warmth ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ö–æ–ª–æ–¥/—Ç–µ–ø–ª–æ —Å–¥–≤–∏–≥
def apply_warmth(img, warmth):
    b, g, r = cv2.split(img.astype(np.float32))
    factor = warmth / 100.0  # –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ—Ç -1 –¥–æ +1

    # Tezza-like: —Ç–µ–ø–ª–µ–µ ‚Üí –±–æ–ª—å—à–µ R, —Ö–æ–ª–æ–¥–Ω–µ–µ ‚Üí –±–æ–ª—å—à–µ B
    r += 30 * factor         # –º–∞–∫—Å–∏–º—É–º ¬±30
    b -= 20 * factor         # –º–∞–∫—Å–∏–º—É–º ‚àì20

    img = cv2.merge([b, g, r])
    return np.clip(img, 0, 255).astype(np.uint8)

# üì∏ –ü—Ä–∏–º–µ–Ω—è–µ–º iPhone-—Å—Ç–∏–ª—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é 
def apply_iphone_style(img, exposure=0.8, brightness=35, brilliance=0.5, warmth=-35):
    img = img.astype(np.float32)

    # üì∏ Exposure ‚Äî —É–º–Ω–æ–∂–µ–Ω–∏–µ midtones
    img *= 1 + exposure

    # üí° Brightness ‚Äî —Å–¥–≤–∏–≥–∞–µ–º –≤–≤–µ—Ä—Ö
    img += brightness

    # üå§ Brilliance ‚Äî –º—è–≥–∫–æ–µ –ø–æ–¥–Ω—è—Ç–∏–µ —Ç–µ–Ω–µ–π
    shadows = img < 128
    img[shadows] += brilliance * (128 - img[shadows])

    # üé® Warmth ‚Äî –≤—ã–∑—ã–≤–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ
    img = apply_warmth(img, warmth)

    return np.clip(img, 0, 255).astype(np.uint8)

def process_folder(input_dir, output_dir):
    os.makedirs(output_dir, exist_ok=True)

    for filename in tqdm(os.listdir(input_dir)):
        if not filename.lower().endswith(('.jpg', '.jpeg', '.png')):
            continue

        path = os.path.join(input_dir, filename)
        img = cv2.imread(path)

        adjusted = apply_iphone_style(
            img,
            exposure=0.8,     # +80% —Å–≤–µ—Ç–∞
            brightness=35,    # +35 —è—Ä–∫–æ—Å—Ç–∏
            brilliance=0.5,   # –ª—ë–≥–∫–∏–π –º—è–≥–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç
            warmth=-35        # —Ö–æ–ª–æ–¥–Ω–µ–µ
        )

        cv2.imwrite(os.path.join(output_dir, filename), adjusted)

if __name__ == '__main__':
    process_folder('input_images', 'output_images')
